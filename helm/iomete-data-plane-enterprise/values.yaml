# Name for the data plane.
# If you have multiple data-planes, provide a distinguish name for each.
name: iomete-data-plane

# Data Plane admin user
adminUser:
  username: "admin"
  email: "admin@example.com"
  firstName: Admin
  lastName: Admin
  temporaryPassword: "admin" # you will be prompted to change this on first login

database:
  # Currently only postgresql supported. For mysql please contact support.
  type: postgresql
  host: "postgresql"
  port: "5432"
  user: "iomete_user"
  password: "iomete_pass"
  # if passwordSecret is set, the password will be read from the secret
  passwordSecret: {}
    # name: byo-db-creds
    # key: password
  prefix: "iomete_" # all IOMETE databases will be prefixed with this. See database init script.
  # Provide database admin credentials to create the IOMETE databases, otherwise please run the database init script manually.
  adminCredentials: {}
    # user: "postgres"
    # password: "password"
    # # if passwordSecret is set, the password will be read from the secret
    # passwordSecret: {}
    #   # name: byo-db-creds
    #   # key: password
  ssl:
    enabled: false # Enabling this will require javaTrustStore to be enabled and configured properly
    mode: "disable" # disable, verify-full

spark:
  logLevel: warn

keycloak:
  enabled: true
  adminUser: "kc_admin"
  adminPassword: "Admin_123"
  # if adminPasswordSecret is set, the password will be read from the secret
  adminPasswordSecret: {}
    # name: secret-name
    # key: password
  # Change this if enabled is set to false, or controlPlane is enabled
  endpoint: "http://keycloak-http/auth"

storage:
  bucketName: "lakehouse"
  # minio, dell_ecs, aws_s3, gcs, azure_gen1
  type: "minio"
  dellEcsSettings: {}
  minioSettings: {}
    # endpoint: "http://minio.default.svc.cluster.local:9000"
    # accessKey: "admin"
    # secretKey: "password"
    # # if secretKeySecret is set, the secretKey will be read from the secret
    # secretKeySecret: {}
    #   # name: secret-name
    #   # key: secret-key
  azureSettings: {}
    # storageAccountName: ""
    # storageAccountKey: ""

clusterDomain: cluster.local

docker:
  repo: iomete
  pullPolicy: Always
  appVersion: 1.11.0
  sparkVersion: 3.5.1
  imagePullSecrets: []
  # - name: your-image-pull-secret

dataCatalog:
  enabled: true
  # Allocated memory for Typesense search engine
  storageSize: 1Gi
  # This enables the PII detection feature in the data catalog. It will also install the Presidio Docker image.
  piiDetection: false

# Data Security Module
ranger:
  enabled: true
  audit:
    enabled: false

jupyterGateway:
  kernels:
    - pyspark_kernel
    - spark_scala_kernel

# Set `true` if prometheus-stack is installed in the cluster
# You can install it with a separate helm chart
monitoring:
  installed: false

logging:
  source: "kubernetes" # kubernetes, loki, elasticsearch
  lokiSettings: {}
    # host: "loki-gateway"
    # port: "80"
  elasticSearchSettings: {}
    # host: "elasticsearch-master.efk.svc.cluster.local"
    # port: "9200"
    # apiKey: "elastic"
    # indexPattern: "logstash-*"

javaTrustStore:
  enabled: false
  secretName: java-truststore # Name of the secret with the truststore.jks file
  fileName: truststore.jks
  password: changeit
  mountPath: /etc/ssl/iomete-certs

ingress:
  httpsEnabled: true